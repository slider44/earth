"use strict";
var core_1 = require('@angular/core');
var store = require('@ngrx/store');
var devtools_1 = require('./devtools');
var reducer_1 = require('../monitors/dock-monitor/reducer');
var MONITOR_REDUCER = new core_1.OpaqueToken('@ngrx/devtools/store/monitor-reducer');
function instrumentStore(_monitorReducer) {
    if (_monitorReducer === void 0) { _monitorReducer = { dock: reducer_1.dockReducer }; }
    var reducer = typeof _monitorReducer === 'function'
        ? _monitorReducer
        : store.combineReducers(_monitorReducer);
    return [
        core_1.provide(store.StoreBackend, {
            deps: [
                store.REDUCER,
                store.Dispatcher,
                store.INITIAL_STATE,
                store.RESOLVED_PRE_MIDDLEWARE,
                store.RESOLVED_POST_MIDDLEWARE,
                MONITOR_REDUCER
            ],
            useFactory: function (reducer, dispatcher, initialState, preMiddleware, postMiddleware, monitorReducer) {
                return new devtools_1.StoreDevtools(reducer, dispatcher, initialState, preMiddleware, postMiddleware, monitorReducer);
            }
        }),
        core_1.provide(devtools_1.StoreDevtools, { useExisting: store.StoreBackend }),
        core_1.provide(MONITOR_REDUCER, { useValue: reducer })
    ];
}
exports.instrumentStore = instrumentStore;
